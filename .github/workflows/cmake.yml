name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        config:
          - { name: "Windows MSVC", os: windows-latest, cc: "cl", cxx: "cl" }
          - { name: "Ubuntu gcc", os: ubuntu-latest, cc: "gcc", cxx: "g++" }
    runs-on: ${{ matrix.config.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        
    - name: Cache CMake Output
      id: cache-cmake
      uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/NativeSource/Build${{env.BUILD_TYPE}}
        key: ${{ runner.os }}-build-${{env.BUILD_TYPE}}-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-${{env.BUILD_TYPE}}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    
    - name: Setup Ninja
      uses: ashutoshvarma/setup-ninja@master

    - name: Setup Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
       vulkan-query-version: 1.3.204.0
       vulkan-components: Vulkan-Headers #, Vulkan-Loader
       vulkan-use-cache: true

    - name: Build CMake
      uses: ashutoshvarma/action-cmake-build@master
      with:
        source-dir: ${{github.workspace}}/NativeSource
        build-dir: ${{github.workspace}}/NativeSource/Build${{env.BUILD_TYPE}}
        cc: ${{ matrix.config.cc }}
        cxx: ${{ matrix.config.cxx }}
        configure-options: -G Ninja
        build-type: ${{env.BUILD_TYPE}}

    - name: Build DotNet
      working-directory: ${{github.workspace}}/ManagedSource/UraniumCompute/UraniumCompute
      run: dotnet build -c ${{env.BUILD_TYPE}}

    # - name: Test
      # working-directory: ${{github.workspace}}/NativeSource/BuildRelease
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      # run: ctest -C ${{env.BUILD_TYPE}}
      
